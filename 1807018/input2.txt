#ImporT>input_output.h<
#ImporT>math.h<
#ImporT>all_logical_library.h<

>IntegeR< func(( >IntegeR< a )) {{
  ->OuT<-((??Within function??))
  >IntegeR< abc := 10
  >BacK< abc
}}

>IntegeR< display(()) {{
  ->OuT<-((??Within display function??))
}}

>IntegeR< main(()) {{
  >IntegeR< num1 := 6 ,, num2 := 2
  >IntegeR< num3 := 1

  num3 := ((num1 + num2)) ** 2

  ->OuT<-((num1))
  ->OuT<-((num2))
  ->OuT<-((num3))
  
  num3 := num1 + num2 * 5
  ->OuT<-((num3))

  num3 IncremenT1
  ->OuT<-((num3))

  num3 DecremenT1
  ->OuT<-((num3))

  >FloaT< fnum1 := 5.5 ,, fnum2 := 6.5 ,, fnum3 := 8.8
  
  ->OuT<-((fnum1))
  ->OuT<-((fnum2))
  ->OuT<-((fnum3))
  
  fnum3 := fnum1 + 4.3 * fnum2
  ->OuT<-((fnum3))

  ->SwitcH<- (( 2 ))
    >CasE< 1 :: (( ->OuT<-((??1??)) ))
    >CasE< 2 :: (( ->OuT<-((??2??)) ))
    >CasE< 3 :: (( ->OuT<-((??3??)) ))
    >DefaulT<:: (( ->OuT<-((??default??)) ))

  >IntegeR< a := 2 ,, b := 4

  func(( a ))

  ->IF<- (( a < b )) {{
    ->IF<-(( a < b )) {{
      ->OuT<-((??Inside nested if??))
    }}
    ->OuT<-((??Inside if??))
  }}
  ->ElsE<- {{
    ->OuT<-((??Inside else??))
  }}

  ->WhilE<- (( a < b )) {{
    ->OuT<-((??Inside while loop??))
  }}

  ->FoR<- (( a := 1 :: a <= 5 :: a IncremenT1)) {{
    ->OuT<-((??Inside for loop??))
  }}

  display(())

  ->->-> This is single line comment
  
  ->-> This is a 
  multiline
  comment
  <-<-

  ->OuT<-((??Hello World??))

  >IntegeR< m := 2 ,, n := 3
  >IntegeR< y := 9

  y := m ^^ n
  ->OuT<-((y))

  y := m || n
  ->OuT<-((y))

  y := m && n
  ->OuT<-((y))
  
  ->GcD<-(( m ,, n ))
  ->LcM<-(( m ,, n ))
  ->MiN<-(( m ,, n ))
  ->MaX<-(( m ,, n ))
  >BacK< 0
}}